I've been on a side mission today to set up my resume so that I can begin applying for marketing coordinator and related positions when they come up. I think this would be a good way to earn a few extra dollars and gain more relevant experience (many of them list basic programming skills as an asset such as HTML and CSS). I am applying for one job now with Sunwire and once that is done I am going to continue with the binary search tree program (i'm excited to spend time on it, I read about insertion/deletion today and I think I have a general idea of how to approach it).

Damn that insert function kicked my butt tonight! I had a difficult time working out the logic but i've got it working now and it's beautiful. Here's a rundown:

A root node of a binary tree, which is sourced from the return of the buildTree function, is plugged in as the input to instantiate a Tree object. This tree object now has access to the insert method which takes a value as it's input and places it in the proper position on the tree. First the value is compared for equivalency against the roots value to ensure it is not a duplicate. If it is, the node is returned without being added to the tree. Next I check if the value is lower than the roots value, in which case it goes through another check to see if the roots current left value is null. If it is null than we have found a leaf node and can create a new node using the input value, and then set the leaf nodes left property to point to it. Return the node that was created to avoid implicitly returning undefined and causing type errors. If it is not null than we recursively call the insert function again passing in the node that the roots left value is pointing to. This traces its way down the tree until a leaf node is found. Same process is down for the right side of the tree but checking for values higher than the root of course. 