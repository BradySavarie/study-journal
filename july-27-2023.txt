Been studying the reducers lesson in React today. It's an interesting concept and the hook is a good alternative to useState in situations where many event handlers are changing the same state variable. Instead of writing all of these separate handlers I can put dispatch actions when an event is triggerd which get sent to a reducer function. I writ ethe reducer function to take the action object along with the current state. It uses the action type in a switch statement to decide which actions it needs to take to update the state, and then does so accordingly when the action type in the object matches the case. To actally use the custom reducer function it needs to be passed into the useReducer hook along with an initial state. The function returns two values: state, and dispatch. state represents the stateful value that is being updated once the render is completed, while dispatch is a function that takes the current state and the action object to decide how to update it. Definitely more tricky to use than the typical useState hook but it is nice when you want to condense a bunch of handlers into one function.

Went through all of Reacts reducer challenges in the 'Extracting State Logic into a Reducer' section of their docs. It was more difficult than I imagined it would be to get through those little exercises but I feel like I definitely have a better grasp on how to use reducers now which is awesome! Might go through them again real quick actually to make sure it all stuck. It probably won't be all that common that I choose to use a reducer instead of state but i'm sure the use cases will pop up here and there as I make more complicated apps.

Im also reading through the useReducer hook documentation specifically to reinforce what i've learned. Shouldn't take all that long.

Alright so I redid all of the reducer challenges, completing the lesson, and even got through the written portion of the odin projects next lesson and refs and memoization. I need to review all of the attached resources and spend quite a bit of time with these concepts I believe to let them connect fully. Right now I understand from a basic perspective how they work and what htey are but I will need to study them further to really lock it all in.