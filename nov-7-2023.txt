I finished the update functionality yesterday and also included delete and start options for the upload photos component. You can click a start icon to make it the 'main' image, which just shifts it to the front of the added photos array so that it is displayed first. I used a put request for the first time in order to update existing data. I don't entirely understand why I couldn't have just used a post request to be honest, I think i'm going to start todays session by researching that in a little bit more depth! ON the bright side though I am finding myself getting the hang of this full-stack thing. It all makes a lot more sense after putting it into practice. I am just communicating back and forth between a client and server using http requests. It's just about bundling up the correct information and making sure that the api handles it and responds as intended. Obviously a lot more nuance than that haha but I don't know why it was such an intimidating thing when really it's all just programming. The back-end is much harder from a logic perspective, but css (and to a certain extent javascript) is honestly a tricky beast to tame as well so it's not as if that difficulty level has increased exponentially so far. Same language and everything luckily! Thank you whoever developed NodeJS!!

Cool so I learned that while you can use a put request and post request interchangeably from a purely technical standpoint, it does have a specific purpose. YOu use a put request when you want to indicate that the api will be updating a resource. This is good for semantics as it tells developers exactly what should be happening inside of the request. Not only that, but a put request is idempotent while a post request is not. This means that a put request can occur many times but the result will only occur once (the resource is updated using the paylod provided, or created if it does not exist). A post request on the other hand is meant to create new things so it can happen as many times as it is called upon.