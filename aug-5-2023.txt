today i'm finishing up the aria lessons additional resources. I want to get more familiar with the concepts via repitition. In addition to that i'd like to start into the lesson on accessibility auditing. I think it will be nice to know exactly how to approach testing my site for a11y rather than just trying to remember all the different steps that I could take. I heard something about a plugin that ensures a website follows WCAG AA compliance kind of like how a linter would work, so that would be a nice tool to have.

In this seciton i've been learning about how to use the accessibility pane in devTools, as well as how to use Lighthouse (the built in auditing tool for chrome). The accessibility pane shows the accessibility tree, aria properties, and computed a11y properties of DOM nodes.

I finished accessibility and have started tackling the responsive design section now! I find this one more interesting since I deal with responsivity issues all the time and would like to improve at it. Overall I found that the a11y section made me appreciate the concept and why it's important, and it also gave me a better foundation to work from for when I do need to take it into consideration. I don't think it's going to be something that I spend alot of time accounting for in my projects though unless I intend on deploying them because it seems to be alot of extra work for a questionable amount of return. I want to be accomodating towards those with disabilities of course but there is also a cost associated with spending a bunch of time working on it. That being said, I learned enough to know how to integrate a11y into my development process without making additional work necessary in the first place which is a great first step towards improving at it. For example, I can pay closer attention to writing semantic html that I know screen readers will have an easier time parsing. I can also make a11y friendly design/content choices such as high contrast text, less complex language when possible, etc. Being aware of the concepts is a good thing for sure, and when I decide I want to spend more time on improving the accesibility of a site I can always use my devTools to audit it and move forward from there. Not too bad. I guess a11y is similar to testing in that it is a best practice that provides a lot of benefit but can be a bit on the tedious side. At least that is how I currently see it, hopefully I come across some situations that emphasize the importance of it so I can be more sure of myself when putting the extra effort in! 

Anyways right now I am learning about natural responsiveness. HTML is naturally responsive, css is what causes elements not to be. Therefore, bad resonsiveness is a result of decisions that I make as a developer. If I learn to make better choices than there won't be that much extra work involved in keeping a site responsive. I just need to learn the proper techniques. I do have some experience at this point designing responsively so I feel like I am not too far off of being confident with designing for mobile and desktop screens, I just definitely need to learn some more techniques to ensure everything stays flexible. In particular text and images, I tend to struggle there.