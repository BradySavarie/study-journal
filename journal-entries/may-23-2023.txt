Last night was pretty successful. I ended up completing the first big 'phase' of implementing the drag and drop interface. I can now drag each ship over the board, highlighting the cells that the ship will take up in either red or green to communicate the validity of the placement, and I can drop the ship on the board (populating the shipPositions array and rendering the placement to screen). This is pretty awesome however there are some limitations to how i've written the code that I have to address. 

The first concern that I have is that instead of appending the ship into the cell that it is dropped on I have instead added a class to the correct cells so that it appears the ship is there. This means that once placed the ship can't be moved since the cell itself is not a draggable item. Ideally I would like to append the ship inside of the cell itself however this will require heavy revisions so I think I am instead going to use a slightly less desirable work around. I will just program the new game button to reload the window on click rather than allow ship replacement. This will be a bit clunkier for sure but this project is just for learning purposes and i'm confident that if I was required to write the reposition logic that I would be able to figure it out.

The next concern is again in relation to how the rendering of ships to the boards works. Right now im just looping through the length of the ship to change classes on the correct cells when its dropped. When it comes to having to change the orientation of the ship this will be a problem because the rendering logic is restricted to a simple horizontal render based on the ship length. I think instead I need to separate the logic from the drop handler and put it back inside the render board function. This will require a little refactoring but it seems to be worth it.
