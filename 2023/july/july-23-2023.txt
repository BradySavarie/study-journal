Yesterday was pretty successful. These are the tasks that I have remaining for the shopping cart application after the progress that was made:

    - Write unit tests for each component
    - create and style product filtering component
    - Style not found page
    - Add more products to the database
    - Style Similar Products section
    - Include local storage?

Today goal is going to be to add products to the database, style the similar products section, and style the not found page (or ensure that a navigation happens back to the home page instead). Perhaps I can add in the local storage as well if I have time but I expect this to take a little while yet. Tomorrow then will be all about creating the product filtering. Tuesday I will dig into the unit testing. I definitely should have been writing those as I was coding because now it just feels like a chore rather than something that can aid in the development project. If there were other programmers working on this though than writing the tests afterwards would have it's value so practicing now is still a good call regardless. Once all of this is done I will deploy the app and move on.

It's worth noting as well that I have been reading through the website patterns.dev to help learn some design patterns in React. It's pretty interesting stuff and I see how these patterns can be applied to many different problems. So far I have covered the singleton pattern, proxy pattern, provider pattern, and prototype pattern. There are 16 design patterns in total on the website that I want to cover and will read on average 1 a day until I get through them all. The goal is exposure to the concepts, not necessarily memorizing the intricacies of using them. I just want to know that certain approachees exist so ideas can be sparked for organzing my code later. The are also rendering patterns and performance patterns. I think once im finished the design patterns I will want to move on to the rendering patterns, however I don't intend on going through the performance section right now I don't think. I'm still pretty green when it comes to writing code in the long run, so I think my focus should not be on performance right now despite it's importance. Instead I should just be getting familiar with writing 'shitty' code so that I can understand what makes it all run without concerning myself too much over how optimized it is. That can come later.
