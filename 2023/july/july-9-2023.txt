Alright time to get started. Tonights goal is to make it through the first testing lesson in TOP entirely. SHouldn't be too difficult now that I have everything configured. If I have time leftover I am going to move forward into the next lesson as well. I am itching to get going on the project os the sooner I can get these lessons taken care of the better.

Okay so far i've run through some basic testing using the react testing library! It is so similar to Jest, I basically am just expanding my testing syntax repertoire. I've learned that I can render components within tests using the render method from react testing library, which allows me to have instances of the components that i'm trying to make assertions about available. To make an assertion the component has to exist inside of a container. It is so common that the container being used is document.body (to test the entire screen) that a screen component already exists that creates a container for you automatically that is appended to the document.body. It has access to all of the assertions that you would expect need to be appended to be the body. When you want to test based on a different container than you can use the one that the render function returns by destructuring it like this:

    'const { container } = render(<Component />)


First lesson testing is history! Pretty neat stuff. I learned more about testing react components such as how to render them, use queries to select particular elements (theres a bunch of querying options, some of which are preferred over others), simulate events using the userEvents library, and use snapshots to analyze if things have changed. Quite a few useful topics there. Next up is learning all about mocking in the context of React. I am probably going to watch a short video series as well to go through some more details on the react testing library just in case im missing something important.
