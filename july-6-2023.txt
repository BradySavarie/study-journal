Last night I had figured out how basic routing works. I created a practice react app and installed react-router-dom. It seems like a simple concept so far but i'm sure there is a lot of added complexity to it. I just made a few test components and used the router to toggle between them as i updated the pages url. To do this I created a route switch component that is the first component called in my app (so it's located in the index instead of app.js). From there I used a browserRouter to create a few seperate routes that have different paths, and inserted the custom components as the elements that relate to each path. Easy process overall and I can see how beneficial it would be. 

I also learned about the Link component that sends users to a specified path without refreshing the page just like a route does. It is basically a replacement for an anchor tag. A route is similar but it decides which component should be rendered based on the active url path instead of a click event. 

Todays goal is to complete a video assignment on react router that gets a little deeper into the concepts, and then complete the remainder of the lesson hopefully as there shouldn't be too much resource left to sift through.

I looked into React testing at work today out of curiosity and noticed that the odin project recommends building projects with create-react-app which has Jest built in. It goes on to teach you how to use Jest with React by installing an additional library that has extra matchers to use that are relevant to the framework. This is interesting, but i'm pretty set on using Vite as my build tool moving forward so I think I am going to stray from the path a little bit here. Vite is compatible with Jest but it requires extra configuration. It is also slower to run than the built in testing framework Vitest. For tose reasons I think I would benefit more from learning Vitest intead (especially since it uses pretty much the same syntax as Jest from what I can tell, so I already have a certain amount of familiarity with it). I expect to encounter a couple roadblocks since TOP is using different tech but I should be able to make it work. Better for my skillset overall anyways.