I'm going to finish the MongoDB course today! Yesterday after finishing up the Atlas Search unit I decided to carry on and got all the way through the data modelling intro unit as well. I learned alot of interesting things in that unit.

The purpose of data modelling is to make data easier to work with by organizing it logically and to make accessing it more performant by creating models that structure the data in a way that is efficient to work with. A main point that was drilled into my head was data that is accessed together sould be stored together. There are a bunch of techniques that can be employed to make this work. You want to choose a type of data relationship (one-to-one, one-to-many, many-to-many) that best represents how the data will be accessed. For example, if you have a couple of phone number fields that are stored as a one-to-one relationship it may be better to create a contact field that stores an array of phone numbers (one-to-many relationship). These choices depends on the context of how the data will be used. 

Data can be either embedded or referenced. With the embedded model, you are nesting subsets of data directly within another document in order to maintain the relationship. Embedding data improves query performance and simplifies queries by only storing it within a single document. Referencing data on the other hand involves storing references to pieces of data that is stored outside of the document so that you can go retrieve it elsewhere. The benefit of this is avoiding data duplication and ensuring that file sizes remain small as the data scales (which could be very important because mongoDB can only store 16MB per document. Unbounded data could extend beyond).